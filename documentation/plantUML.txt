@startuml
game_API -right-> manage_step
game_API -up-> connection_user
connection_control .left.|> connection_user
manage_step <|.right. game_control
game_control -up->connection_control
game_control -right->game_make


note top of game_make 
<size:10>Конструктор, на основе clear_board.txt,
<size:10>создает файл game_name.txt в папке /game/game_name, 
<size:10>в котором происходит сама игра.
<size:10>set-функция меняет значения в матрице,
<size:10>get-функции берут из матрицы состояния "фигур".
end note


note top of connection_control 
<size:10>Конструктор заполняет(сначала создает) файл,
<size:10>table_hash_game.txt,в котором хранится хеш  
<size:10> и соответствующие ему номер игры.
<size:10>По ним происходит валидация пользователей
<size:10>и поиск номера игры.
end note


class game_API {
+$_COOKIE["id"];
+$_COOKIE["hash"];

+start_game(state, key)
+make_step(figure, point A, point B)
+status_game()

}

class connection_control {

+control_start(status,key)

-create_game(key_phrase)
-control_end()
-control_valid_key_game(key_phrase, need_game_number)
}

class  manage_step <<interface>> {
+set_step()
+get_status()
}

class connection_user <<interface>> {
+control_start(status,key)
}

class game_control {
+set_step() {}
+get_status() {}

-check_valid()
-control_exist_game()
-control_step()
-control_king_safety()
-control_checkmate()
}

class game_make {
-fill_board

+construct_board(game_name)
+set_on_board()
+get_board_status()
+get_figure_status()
}
@enduml